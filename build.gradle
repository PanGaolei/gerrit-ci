task wrapper(type: Wrapper) {
    gradleVersion = '2.4'
}

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'de.richsource.gradle.plugins:gwt-gradle-plugin:0.6'
    }
}

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'eclipse'
apply plugin: 'gwt'

group = 'com.palantir.gerrit.gerritci'
version = '0.1.0'

description = """gerrit-ci"""

sourceCompatibility = 1.7
targetCompatibility = 1.7

/*
 * The provided configuration will designate dependencies that are required for compile and
 * runtime but should not be exported to the JAR.
 */
configurations {
    provided
}

sourceSets {
    main {
        compileClasspath += configurations.provided
    }
}

/*
 * Configure the eclipse plugin to use the new provided configuration and download all
 * sources and javadoc JARs.
 */
eclipse {
    classpath {
        plusConfigurations += [configurations.provided]
        downloadSources = true
        downloadJavadoc = true
    }
}

repositories {
    mavenLocal()
    mavenCentral()

    maven { url "http://repo.jenkins-ci.org/public/" }
}

jar {
    from 'build/gwt/include'

    manifest {
        attributes(
            'Gerrit-PluginName': project.name,
            'Gerrit-ApiType': apiType,
            'Gerrit-ApiVersion': apiVersion,
            'Gerrit-Module': 'com.palantir.gerrit.gerritci.Module',
            'Gerrit-HttpModule': 'com.palantir.gerrit.gerritci.HttpModule',
            'Gerrit-ReloadMode': 'restart',
            'Implementation-Vendor': 'Palantir',
            'Implementation-URL': 'https://github.com/palantir/gerrit-ci',
            'Implementation-Title': "${apiType} ${project.name}",
            'Implementation-Version': version,
        )
    }

    // Include compile dependencies in JAR.
    doFirst {
        from configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

dependencies {
    provided(
        [group: 'com.google.gerrit', name: "gerrit-${apiType}-api", version: apiVersion],
        [group: 'com.google.gerrit', name: 'gerrit-plugin-gwtui', version: apiVersion]
    )

    compile(
        [group: 'com.offbytwo.jenkins', name: 'jenkins-client', version: '0.3.0'],
        [group: 'org.slf4j', name: 'slf4j-api', version: '1.7.12'],
        [group: 'org.slf4j', name: 'slf4j-log4j12', version: '1.7.12'],
        [group: 'log4j', name: 'log4j', version: '1.2.17'],
        [group: 'org.apache.velocity', name:'velocity', version: '1.7']
    )

    testCompile(
        [group: 'junit', name: 'junit', version: '4.12']
    )
}

gwt {
    gwtVersion = '2.6.1'
    modules 'com.palantir.gerrit.gerritci.ui.settings', 'com.palantir.gerrit.gerritci.ui.projects'

    compiler {
        disableClassMetadata = true
        disableCastChecking = true
    }
}

// Moves output of GWT compilation under a /static directory so it's packed into the JAR correctly
task copyGwt(type:Copy) {
    from 'build/gwt/out'
    into 'build/gwt/include/static'
}
copyGwt.dependsOn compileGwt
copyGwt.mustRunAfter compileGwt
build.dependsOn copyGwt
build.mustRunAfter copyGwt

task copy(type:Exec) {
    executable "vagrant"
    args 'ssh', '-c', "cp /vagrant/build/libs/gerrit-ci-${version}.jar ~/gerrit/plugins"
}
copy.mustRunAfter build

task reload(type:Exec) {
    executable "ssh"
    args '-o', 'UserKnownHostsFile=/dev/null', '-o', 'StrictHostKeyChecking=no', '-p', '29418',
        'localhost', 'gerrit', 'plugin', 'reload', 'gerrit-ci'
}
reload.mustRunAfter copy

task all(dependsOn: [build, copy, reload])

